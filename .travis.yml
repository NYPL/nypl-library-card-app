language: node_js
services:
- docker
node_js:
  - "10"
cache:
  directories:
    - node_modules

jobs:
  include:
    - stage: test
      install: npm install
      script: npm test

    - stage: docker build
      if: (branch = qa or branch = production)
      before_install:
      - if [[ $TRAVIS_BRANCH == "qa" ]];
        then
          export APP_ENV="qa";
        fi
      - if [[ "$TRAVIS_BRANCH" == "production" ]];
        then
          export APP_ENV="production";
        fi
      env:
      - ECR_URL=946183545209.dkr.ecr.us-east-1.amazonaws.com/nypl-library-card-app
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION
      install:
        - pip install --user awscli
        - export LOCAL_TAG_NAME="${APP_ENV}-latest"
      script:
        - eval $(aws ecr get-login --no-include-email --region us-east-1)
        - docker build -t "$LOCAL_TAG_NAME" .
        - docker tag "$LOCAL_TAG_NAME" "$ECR_URL:$LOCAL_TAG_NAME"
        - docker push "$ECR_URL:$LOCAL_TAG_NAME"

    - stage: deploy qa
      if: branch IN (qa) AND type != pull_request
      env:
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_REGION=us-east-1
      - CLUSTER_NAME=nypl-library-card-app-qa
      install:
      - pip install --user awscli
      script:
      - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment

    - stage: deploy production
      if: branch IN (production) AND type != pull_request
      env:
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_QA
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_QA
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_REGION=us-east-1
      - CLUSTER_NAME=nypl-library-card-app-production
      install:
      - pip install --user awscli
      script:
      - aws ecs update-service --cluster $CLUSTER_NAME --service $CLUSTER_NAME --force-new-deployment
